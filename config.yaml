adv:
 epsilon:
  0.3
 num_steps:
  40
 step_size:
  0.01
 random_start:
  True
 loss_func:
  xent
 width_multiplier:
  8
 init_func:
  default
 random_seed:
  2023

general:
 sparsity_type:
  filter
 print_freq:
  10
 resume:
  False
 gpu_id:
  0
 arch:
  lenet_adv
 workers:
  16
 logging:
  False
 log_dir:
  logs
 smooth_eps:
  0.0
 alpha:
  0.0

pretrain:
 lr:
  0.1
 epochs:
  40
 warmup_lr:
  0.0001
 warmup_epochs:
  0
 save_model:
  lenet_adv_pretrained.pt
 optimizer:
  adam
 lr_scheduler:
  default

admm:
 lr:
  0.01
 epochs:
  40
 save_model:
  lenet_bn_admm.pt
 load_model:
  lenet_bn_pretrained.pt
 optimizer:
  sgd
 lr_scheduler:
  default
 admm_epoch:
  4
 rho:
  0.001
 multi_rho:
  True
 masked_progressive:
  False
 verbose:
  False

retrain:
 lr:
  0.01
 epochs:
  40
 warmup_lr:
  0.0001
 warmup_epochs:
  0
 save_model:
  lenet_bn_retrained.pt
 load_model:
  lenet_bn_admm.pt
 optimizer:
  adam
 lr_scheduler:
  default
 masked_progressive:
  False

lenet_adv:
  prune_ratios:
    conv1.weight:   # if sparsity type is bn_filter, use bn{i}
      0.8         # if sparsity type is filter , use conv{i}
    conv2.weight:
      0.947
